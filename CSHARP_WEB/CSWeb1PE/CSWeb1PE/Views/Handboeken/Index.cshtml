@using Microsoft.AspNetCore.Identity
@model IEnumerable<CSWeb1PE.Models.Handboek>

@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


@if (signInManager.IsSignedIn(User) && await userManager.IsInRoleAsync(await userManager.GetUserAsync(User), "Admin"))
{
<p>
    <a asp-action="Create">Create New</a>
</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Titel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Kostprijs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UitgifteDatum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Afbeelding)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Titel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kostprijs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UitgifteDatum)
            </td>
            <td>
                <img src="@item.Afbeelding" height="75" />
            </td>
    @if (signInManager.IsSignedIn(User) && await userManager.IsInRoleAsync(await userManager.GetUserAsync(User), "Admin"))
    {
            <td>
                <a asp-action="Edit" asp-route-id="@item.HandboekId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.HandboekId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.HandboekId">Delete</a>
            </td>
    }
        </tr>
}
    </tbody>
</table>
